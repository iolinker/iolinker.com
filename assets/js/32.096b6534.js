(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{416:function(t,a,e){t.exports=e.p+"assets/img/if_condition.8bca13fe.png"},417:function(t,a,e){t.exports=e.p+"assets/img/if_input_paramter_type.a8bc835b.png"},418:function(t,a,e){t.exports=e.p+"assets/img/if_input_boolean.0e6f5c3f.png"},419:function(t,a,e){t.exports=e.p+"assets/img/if_input_date_time.b04601d2.png"},420:function(t,a,e){t.exports=e.p+"assets/img/if_input_number.03a1daba.png"},421:function(t,a,e){t.exports=e.p+"assets/img/if_input_string.a8ec0037.png"},422:function(t,a,e){t.exports=e.p+"assets/img/if_output.16318bac.png"},744:function(t,a,e){"use strict";e.r(a);var i=e(27),s=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"conditional-judgment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conditional-judgment"}},[t._v("#")]),t._v(" Conditional Judgment")]),t._v(" "),a("p",[t._v('Determine the output as true or false based on the input and select the corresponding branch for execution. Supports the use of "and" and "or" to combine conditions, and allows for the use of variable expressions to make dynamic decisions at runtime.')]),t._v(" "),a("p",[a("img",{attrs:{src:e(416),alt:"image-20241007184328803"}})]),t._v(" "),a("h2",{attrs:{id:"input"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#input"}},[t._v("#")]),t._v(" Input")]),t._v(" "),a("h3",{attrs:{id:"conditional-relationships"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conditional-relationships"}},[t._v("#")]),t._v(" Conditional Relationships")]),t._v(" "),a("p",[t._v('Complex conditional combinations can be formed using "and" and "or" relationships. If both "and" and "or" appear in a combination, the relationship is as follows: '),a("code",[t._v("CondX and CondY or CondZ...")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("And")])]),t._v(" "),a("p",[t._v("Returns true only if all conditions (Condition 1, Condition 2, ... Condition N) are true; otherwise, it returns false.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Or")])]),t._v(" "),a("p",[t._v("Returns true if any one of the conditions is true; otherwise, it returns false if all conditions are false.")])])]),t._v(" "),a("h3",{attrs:{id:"conditional-value-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conditional-value-types"}},[t._v("#")]),t._v(" Conditional Value Types")]),t._v(" "),a("p",[t._v("Currently, the following four types of value comparisons are supported: boolean, date and time, numeric, and string.")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(417),alt:"image-20241007182250995"}}),t._v(" "),a("p",[t._v("Values 1 and 2 can be constants or variable expressions (dynamically retrieved at runtime).")]),t._v(" "),a("h4",{attrs:{id:"boolean-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean-value"}},[t._v("#")]),t._v(" Boolean Value")]),t._v(" "),a("p",[t._v("Determine whether Value 1 is true or false (Value 2 is not applicable here).")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(418),alt:"image-20241007183512956"}}),t._v(" "),a("h4",{attrs:{id:"date-and-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-and-time"}},[t._v("#")]),t._v(" Date and Time")]),t._v(" "),a("p",[t._v("Compare the relationship between Value 1 and Value 2 in terms of dates. You can compare strings in the format "),a("code",[t._v("yyyy-mm-dd hh:mm:ss")]),t._v(" as well as Unix timestamp formats.")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(419),alt:"image-20241007183551996"}}),t._v(" "),a("h4",{attrs:{id:"numeric"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#numeric"}},[t._v("#")]),t._v(" Numeric")]),t._v(" "),a("p",[t._v("Compare the relationship between Value 1 and Value 2 in terms of size, including:")]),t._v(" "),a("ul",[a("li",[t._v("Greater than")]),t._v(" "),a("li",[t._v("Greater than or equal to")]),t._v(" "),a("li",[t._v("Less than")]),t._v(" "),a("li",[t._v("Less than or equal to")]),t._v(" "),a("li",[t._v("Equal to")]),t._v(" "),a("li",[t._v("Not equal to")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(420),alt:"image-20241007183630957"}}),t._v(" "),a("h4",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),a("p",[t._v("Compare the relationship between Value 1 and Value 2 in terms of strings, including:")]),t._v(" "),a("ul",[a("li",[t._v("Contains")]),t._v(" "),a("li",[t._v("Does not contain")]),t._v(" "),a("li",[t._v("Starts with...")]),t._v(" "),a("li",[t._v("Does not start with...")]),t._v(" "),a("li",[t._v("Ends with...")]),t._v(" "),a("li",[t._v("Does not end with...")]),t._v(" "),a("li",[t._v("Equal to")]),t._v(" "),a("li",[t._v("Not equal to")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(421),alt:"image-20241007183709939"}}),t._v(" "),a("h2",{attrs:{id:"output"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[t._v("#")]),t._v(" Output")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[true/false]\n")])])]),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(422),alt:"image-20241007183817574"}})])}),[],!1,null,null,null);a.default=s.exports}}]);